/**
 * Generated by orval v7.3.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import {
  HttpClient
} from '@angular/common/http'
import type {
  HttpContext,
  HttpEvent,
  HttpHeaders,
  HttpParams,
  HttpResponse as AngularHttpResponse
} from '@angular/common/http'
import {
  Injectable
} from '@angular/core'
import {
  Observable
} from 'rxjs'
import type {
  ApiResponseLivroEntity,
  LivroDto,
  LivroEntity,
  LivroResponseDto
} from '../../model'


type HttpClientOptions = {
  headers?: HttpHeaders | {
      [header: string]: string | string[];
  };
  context?: HttpContext;
  observe?: any;
  params?: HttpParams | {
    [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>;
  };
  reportProgress?: boolean;
  responseType?: any;
  withCredentials?: boolean;
};



@Injectable({ providedIn: 'root' })
export class LivroControllerService {
  constructor(
    private http: HttpClient,
  ) {} updateBook<TData = ApiResponseLivroEntity>(
    id: number,
    livroDto: LivroDto, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    updateBook<TData = ApiResponseLivroEntity>(
    id: number,
    livroDto: LivroDto, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    updateBook<TData = ApiResponseLivroEntity>(
    id: number,
    livroDto: LivroDto, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;updateBook<TData = ApiResponseLivroEntity>(
    id: number,
    livroDto: LivroDto, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.put<TData>(
      `http://localhost:3000/api/livros/alterar/${id}`,
      livroDto,options
    );
  }
 createBook<TData = ApiResponseLivroEntity>(
    livroDto: LivroDto, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    createBook<TData = ApiResponseLivroEntity>(
    livroDto: LivroDto, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    createBook<TData = ApiResponseLivroEntity>(
    livroDto: LivroDto, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;createBook<TData = ApiResponseLivroEntity>(
    livroDto: LivroDto, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.post<TData>(
      `http://localhost:3000/api/livros/incluir`,
      livroDto,options
    );
  }
 getAllBooks<TData = LivroResponseDto[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getAllBooks<TData = LivroResponseDto[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getAllBooks<TData = LivroResponseDto[]>(
     options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getAllBooks<TData = LivroResponseDto[]>(
     options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:3000/api/livros/listar`,options
    );
  }
 getBookById<TData = LivroEntity>(
    id: number, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    getBookById<TData = LivroEntity>(
    id: number, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    getBookById<TData = LivroEntity>(
    id: number, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;getBookById<TData = LivroEntity>(
    id: number, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.get<TData>(
      `http://localhost:3000/api/livros/listar/${id}`,options
    );
  }
 deleteBook<TData = ApiResponseLivroEntity>(
    id: number, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'body' }
  ): Observable<TData>;
    deleteBook<TData = ApiResponseLivroEntity>(
    id: number, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'response' }
  ): Observable<AngularHttpResponse<TData>>;
    deleteBook<TData = ApiResponseLivroEntity>(
    id: number, options?: Omit<HttpClientOptions, 'observe'> & { observe?: 'events' }
  ): Observable<HttpEvent<TData>>;deleteBook<TData = ApiResponseLivroEntity>(
    id: number, options?: HttpClientOptions
  ): Observable<TData>  {
    return this.http.delete<TData>(
      `http://localhost:3000/api/livros/remover/${id}`,options
    );
  }
};

export type UpdateBookClientResult = NonNullable<ApiResponseLivroEntity>
export type CreateBookClientResult = NonNullable<ApiResponseLivroEntity>
export type GetAllBooksClientResult = NonNullable<LivroResponseDto[]>
export type GetBookByIdClientResult = NonNullable<LivroEntity>
export type DeleteBookClientResult = NonNullable<ApiResponseLivroEntity>
